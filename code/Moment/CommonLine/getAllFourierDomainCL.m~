% It will find lines at some angle in Fourier domain, Similart to get1DProjections
% angResolution : 1 (default)
function [projLines] = getAllFourierDomainCL(proj,angResolution)
    %% INIT
    N = size(proj,3); 
    [m,n]=size(proj(:,:,1));
    hm=(m+1)/2;hn=(n+1)/2;
    ox=hm;oy=hn;
    digLen=sqrt(m^2+n^2);
    halfDig=ceil(digLen/2);
    pixelDist=1;
     %% Finding line coordinates at angle: theta with x-axis, assuming center as origin
    x=[halfDig*-1:pixelDist:halfDig]';
    y=[halfDig*-1:pixelDist:halfDig]';   
    ang=[0:angResolution:179];
    angCount=numel(ang);
    x1=repmat(x,[1 angCount]);
    y1=repmat(y,[1 angCount]);
    cosAng=co
    %% finding lines
    for ang=0:angResolution:179
        % Formula: x = ox + r cos(theta); |  y = oy + r sin(theta);
        x=ox+(x.*cos(lineAngle*rad));
        y=oy+(y.*sin(lineAngle*rad));
    end
    
end

